I. Compile Instructions
=======================

1. Install libumngnss.a (i.e. in /usr/local/ugear.overo-oe)

2. Install libatipointing.a (in same root as libumngnss.a)

3. source setpath-overo-oe.sh

4. CC=arm-angstrom-linux-gnueabi-gcc CXX=arm-angstrom-linux-gnueabi-g++ ./autogen.sh

5. ./configure CC=arm-angstrom-linux-gnueabi-gcc CFLAGS="-Wall -O2 -mcpu=cortex-a8 -mfloat-abi=softfp -mfpu=neon -ffast-math -fno-math-errno" CXX=arm-angstrom-linux-gnueabi-g++ CXXFLAGS="-Wall -O2 -mcpu=cortex-a8 -mfloat-abi=softfp -mfpu=neon -ffast-math -fno-math-errno" --host=arm-angstrom-linux-gnueabi --prefix=/usr/local/ugear.overo-oe/

6. make


II. Overo Bootable SD Card Image Instructions
=============================================

(newbies) Setup the serial connection:

    http://www.gumstix.org/connect-to-my-gumstix-system.html


Create a Bootable MicroSD Card:

    http://gumstix.org/create-a-bootable-microsd-card.html

1. Compute card size:

    fdisk -l /dev/sdb

    Disk /dev/sda: 8035 MB, 8035237888 bytes

    Divide the card size in bytes by 255 heads, 63 sectors and 512
    bytes per sector and round down to the nearest
    integer. E.g. 2016411648/255/63/512 = 245.15 --> 245 cylinders.

    i.e.: 15931539456 / ( 255 * 63 * 512 ) = 1936

2. Wipe out current card contents:

    CAUTION: double check device or you'll be reloading your host computer!

    dd if=/dev/zero of=/dev/sdb bs=1024 count=1024

    DANGER!!!!    

3. Partition the card (using sfdisk because that's what gumstix uses)

    sfdisk --force -D -uS -H 255 -S 63 -C nnnn /dev/sdb

    The value of the -C parameter was calculate in the previous step.

    At the prompt "/dev/sdb1 : " type 128,130944,0x0C,* and then press
    enter to set up a 64MB bootable FAT partition.

    At the prompt "/dev/sdb2 : " type 131072,,,- and then press enter
    to setup the linux root partition.

4. Format the new partitions

   mkfs.vfat -F 32 /dev/sdb1 -n boot
   mke2fs -j -L rootfs /dev/sdb2

5. Mount the new partitions (can be done through the graphical file
   manager if you wish) -- otherwise create some mount points and
   mount away.

6. Install the boot files

    cd /home/curt/Projects/OveroOE/tmp/deploy/glibc/images/overo
    cp MLO-overo /media/boot/MLO
    cp u-boot-overo.bin /media/boot/u-boot.bin
    cp uImage-overo.bin /media/boot/uImage

7. Install the rootfs image

    cd /home/curt/Projects/OveroOE/tmp/deploy/glibc/images/overo
    tar xvaf omap3-console-image-overo.tar.bz2 -C /media/rootfs/

8. sync; sync; sync


III. Optional replace the onboard factory image (not using an external
micro sd card)

    Replace the root file system and kernel images:

    http://www.gumstix.net/Setup-and-Programming/view/Getting-started/Replacing-the-file-system-image/111.html


Configure kernel modules:

    http://www.gumstix.net/wiki/index.php?title=Kernel_Reconfiguration
    (pl2303 is already there)

Once configured, including them in your root image:

    http://www.gumstix.net/wiki/index.php?title=Filesystem

    In gumstix-oe/com.gumstix.collection/packages/tasks/task-base-gumstix.bb:

        add kernel-module-pl2303 into the
        RRECOMMENDS_task-base-gumstix-usbhost section


IV. Post install tweaks and fixups

    cd /home/curt/Projects/OveroOE/tmp/deploy/glibc/ipk/armv7a
    scp libstdc++* root@192.168.1.100:
    then onboard the overo:
    opkg install libstdc++...

Clean up of unused services (makes booting much faster and cleaner):

    - /etc/modules

      - hidp (bluetooth stuff?)
      - pcmcia (we don't have any of that do we?)
      - pxa2xx_cs 
      - rfcomm (bluetooth stuff)
      - tsc2003 (touch screen controller)

    - /etc/network/interfaces:

      - comment out ethernet and wireless sections
      - comment out usb0 and bnep0 sections

    - /etc/modprobe.d/ethernet.conf

      -comment out line if no ethernet hardware

    - /etc/init.d/

      - alsa-state, bluetooth, boa (httpd), cron (can be a cpu pig
        when the clock changes by years), ntpd, ntpdate
      - add exit / disabled message

    - /etc/inittab

      - find the line that reads as follows and change "respawn" to "once" 

        S:2345:respawn:/sbin/getty 115200 ttyS0 vt100

      - The getty line in /etc/inittab should finally look like this:

        S:2345:once:/sbin/getty 115200 ttyS0 vt100

      - This gives you an opportunity to log in via the console after
        a reboot to fix something, but allows the UGLink process to
        disable getty so it's not conflicting with the ground station
        communication.


Upload libstdc++.so.6.0.8 from

     /home/curt/Projects/GumStixOE/gumstix-oe/tmp/staging/arm-angstrom-linux-gnueabi/lib/

     copy to /usr/lib
     cd /usr/lib
     ln -s libstdc++.so.6.0.8 libstdc++.so.6

Better yet, figure out how to use bitbake to configure this to be
built into the root file system image.

