<?xml version="1.0"?>

<PropertyList>

  <!-- Route following, 2 stage cascading controller -->

  <!-- Stage #1: set target bank angle based on heading error -->
  <pi-simple-controller>
    <name>True Heading Hold (DG based) Stage 1</name>
    <debug>false</debug>
    <enable>
      <prop>/autopilot/locks/heading</prop>
      <value>route</value>
    </enable>
    <input>
      <prop>/autopilot/internal/wind-true-error-deg</prop>
    </input>
    <reference>
      <value>0.0</value>
    </reference>
    <output>
      <prop>/autopilot/settings/target-roll-deg</prop>
    </output>
    <config>
      <Kp>-0.5</Kp>        <!-- proportional gain -->
      <Ki>0.0</Ki>         <!-- integral gain -->
      <u_min>-20.0</u_min> <!-- minimum output clamp -->
      <u_max>20.0</u_max>  <!-- maximum output clamp -->
    </config>
  </pi-simple-controller>

  <!-- Stage #2: set aileron surface command based on target bank angle -->
  <pid-controller>
    <name>Roll angle hold</name>
    <debug>false</debug>
    <enable>
      <prop>/autopilot/locks/roll</prop>
      <value>aileron</value>
    </enable>
    <input>
      <prop>/orientation/roll-deg</prop>
    </input>
    <reference>
      <prop>/autopilot/settings/target-roll-deg</prop>
      <!-- <value>0.0</value> -->
    </reference>
    <output>
      <prop>/controls/flight/aileron</prop>
    </output>
    <config>
      <!-- from pitchrate-speed config -->
      <!-- 8/6/2013 noticed control throws saturating, so increase range to 0.6 -->
      <!-- 8/7/2013 Kp = -0.035 Ti = 1.0 Td = 0.0001 worked ok but lots of overshoot/oscillation --> 
      <!-- 8/7/2013 Kp = -0.035 Ti = 2.0 Td = 0.001 too much differential? Too much integral? --> 
      <!-- 8/8/2013 Kp = -0.035 Ti = 3.0 Td = 0.0001 too wobbly, too high overall gain? --> 
      <Kp>-0.02</Kp>      <!-- proportional gain-->
      <beta>1.0</beta>     <!-- input value weighing factor -->
      <alpha>0.1</alpha>   <!-- low pass filter weighing factor -->
      <gamma>0.0</gamma>   <!-- input value weighing factor for -->
                           <!-- unfiltered derivative error -->
      <Ti>3.0</Ti>         <!-- integrator time -->
      <Td>0.0001</Td>      <!-- derivator time -->
      <u_min>-0.60</u_min> <!-- minimum output clamp -->
      <u_max>0.60</u_max>  <!-- maximum output clamp -->
    </config>
  </pid-controller>

  <!-- Altitude hold. -->

  <!-- Drive the throttle based on altitude error -->
  <pi-simple-controller>
    <name>Altitude Hold (Pressure altimeter based, references AGL)</name>
    <debug>false</debug>
    <enable>
      <prop>/autopilot/locks/altitude</prop>
      <value>throttle</value>
    </enable>
    <input>
      <prop>/position/altitude-filter-agl-ft</prop>
    </input>
    <reference>
      <prop>/autopilot/settings/target-agl-ft</prop>
      <!-- <value>500</value> -->
    </reference>
    <output>
      <prop>/controls/engine/throttle</prop>
    </output>
    <!-- 8/6/2013, Kp=0.004 Ki=0.001 -->
    <!-- 8/8/2013, Kp=0.003 Ki=0.0005 will less Ki reduce overshoot? -->
    <config>
      <Kp>0.003</Kp>       <!-- proportional gain -->
      <Ki>0.0003</Ki>
      <u_min>0.0</u_min>   <!-- minimum output clamp -->
      <u_max>1.0</u_max>   <!-- maximum output clamp -->
    </config>
  </pi-simple-controller>

  <!-- drives the throttle to achieve the desired climb rate. -->
  <pid-controller>
    <name>Rate of Climb Hold (barometer based)</name>
    <debug>false</debug>
    <enable>
      <prop>/autopilot/locks/altitude</prop>
      <value>climb-rate</value>
    </enable>
    <input>
      <prop>/velocity/pressure-vertical-speed-fps</prop>
    </input>
    <reference>
      <prop>/autopilot/internal/target-climb-rate-fps</prop>
    </reference>
    <output>
      <prop>/controls/engine/throttle</prop>
    </output>
    <config>
      <Kp>0.02</Kp>        <!-- proportional gain -->
      <beta>1.0</beta>     <!-- input value weighing factor -->
      <alpha>0.1</alpha>   <!-- low pass filter weighing factor -->
      <gamma>0.0</gamma>   <!-- input value weighing factor for -->
                           <!-- unfiltered derivative error -->
      <Ti>20.0</Ti>        <!-- integrator time -->
      <Td>0.00001</Td>     <!-- derivator time -->
      <u_min>0.0</u_min>   <!-- minimum output clamp -->
      <u_max>1.0</u_max>   <!-- maximum output clamp -->
    </config>
  </pid-controller>

  <!-- Hold speed by varying elevator --> 
  <pid-controller>
    <name>Speed hold (vary elevator)</name>
    <debug>false</debug>
    <enable>
      <prop>/autopilot/locks/speed</prop>
      <value>elevator</value>
    </enable>
    <input>
      <prop>/velocity/airspeed-kt</prop>
    </input>
    <reference>
      <prop>/autopilot/settings/target-speed-kt</prop>
    </reference>
    <output>
      <prop>/controls/flight/elevator</prop>
    </output>
    <config>
      <!-- 7/19/2013 - first try on telemaster, need to validate gains -->
      <!-- 8/6/2013 - Kp = -0.02 Td = 1.0 (over fighting change?)  u_min = -0.25 (saturating) -->
      <!-- 8/7/2013 - Kp = -0.02 Td = 0.2  u_min = -0.35 slow chasing oscillations -->
      <!-- 8/7/2013 - Kp = -0.03 Td = 0.8  u_min = -0.35 worked ok -->
      <!-- 8/7/2013 - Kp = -0.03 Td = 0.7  u_min = -0.35 moving wrong direction for stability -->
      <!-- 8/7/2013 - Kp = -0.03 Td = 1.0  u_min = -0.35 over fighting change -->
      <!-- 8/8/2013 - Kp = -0.035 Td = 0.8  ok, but wishing for better lock on target -->
      <Kp>-0.035</Kp>       <!-- proportional gain -->
      <beta>1.0</beta>     <!-- input value weighing factor -->
      <alpha>0.25</alpha>  <!-- low pass filter weighing factor -->
      <gamma>0.0</gamma>   <!-- input value weighing factor for -->
      <!-- unfiltered derivative error -->
      <Ti>8.0</Ti>        <!-- integrator time -->
      <Td>0.8</Td>         <!-- derivator time -->
      <u_min>-0.35</u_min> <!-- minimum output clamp -->
      <u_max>0.20</u_max>  <!-- maximum output clamp -->
    </config>
  </pid-controller>

</PropertyList>
